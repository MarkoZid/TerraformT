name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Install Azure CLI
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      # Authenticate with Azure CLI
      - name: Azure CLI Authentication
        run: az login

      # Check Azure CLI Installation Path
      - name: Check Azure CLI Installation Path
        run: whereis az

      # Check Azure CLI Installation Directory Permissions
      - name: Check Azure CLI Permissions
        run: |
          ls -l /opt/az
          if [ -f "/opt/az/bin/az" ]; then
            sudo chmod +x /opt/az/bin/az   # Ensure execute permission for the Azure CLI executable
          else
            echo "Azure CLI executable not found."
          fi

      # Install the specific version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.ZIDAR }}
          terraform_version: 1.6.6  # Specify the version of Terraform you want to use

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init -input=false

    # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: |
          export PATH=$PATH:/opt/az/bin
          terraform plan -input=false
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENNANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUB }}

      # On push to "main", build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

      # Deploy the .NET Core app to Azure Web App
      - name: Deploy .NET Core app to Azure Web App
        run: |
          az webapp deployment source config-zip -g TeraMarathon -n marathon-apizid --src ./publish5.zip

       # Deploy the Client to Azure Web App
      - name: Deploy Frontend to Azure Web App
        run: |
          az webapp deployment source config-zip -g TeraMarathon -n marathon-clientzid --src ./build1.zip   
