name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Install Azure CLI
    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    # Authenticate with Azure CLI
    - name: Azure CLI Authentication
      run: az login

    # Check Azure CLI Installation Path
    - name: Check Azure CLI Installation Path
      run: whereis az

    # Check Azure CLI Installation Directory Permissions
    - name: Check Azure CLI Permissions
      run: |
        ls -l /opt/az
        if [ -f "/opt/az/bin/az" ]; then
          sudo chmod +x /opt/az/bin/az   # Ensure execute permission for the Azure CLI executable
        else
          echo "Azure CLI executable not found."
        fi

    # Install the specific version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.ZIDAR }}
        terraform_version: 1.6.6  # Specify the version of Terraform you want to use

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -input=false

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
        export PATH=$PATH:/opt/az/bin
        terraform plan -input=false

    # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false

    # Deploy the .NET Core app to Azure Web App
    - name: Deploy .NET Core app to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'MarathonAPII'  # Replace with your Azure Web App name
        slot-name: 'Production'    # Replace with your deployment slot name if applicable
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_4D8F0538F6264F1D84A7DE1C7BCB5CC2 }}  # Replace with your Azure App Service publish profile secret
        package: ./app  # Path to the directory containing your .NET Core app files
